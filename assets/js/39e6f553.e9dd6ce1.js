"use strict";(self.webpackChunkpptxgenjs_gh_pages=self.webpackChunkpptxgenjs_gh_pages||[]).push([[4989],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>u});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=s(n),u=r,g=c["".concat(p,".").concat(u)]||c[u]||m[u]||i;return n?a.createElement(g,l(l({ref:t},d),{},{components:n})):a.createElement(g,l({ref:t},d))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=c;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5143:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const i={id:"usage-saving",title:"Saving Presentations"},l=void 0,o={unversionedId:"usage-saving",id:"usage-saving",title:"Saving Presentations",description:"Several methods are available when generating a presentation.",source:"@site/docs/usage-saving.md",sourceDirName:".",slug:"/usage-saving",permalink:"/PptxGenJS/docs/usage-saving",draft:!1,tags:[],version:"current",lastUpdatedBy:"Brent Ely",lastUpdatedAt:1651944302,formattedLastUpdatedAt:"May 7, 2022",frontMatter:{id:"usage-saving",title:"Saving Presentations"},sidebar:"docs",previous:{title:"Slide Properties",permalink:"/PptxGenJS/docs/usage-slide-options"},next:{title:"HTML-to-PowerPoint",permalink:"/PptxGenJS/docs/html-to-powerpoint"}},p={},s=[{value:"Write File",id:"write-file",level:2},{value:"Write File Props (<code>WriteFileProps</code>)",id:"write-file-props-writefileprops",level:3},{value:"Write File Example",id:"write-file-example",level:3},{value:"Write",id:"write",level:2},{value:"Write Props (<code>WriteProps</code>)",id:"write-props-writeprops",level:3},{value:"Write Example",id:"write-example",level:3},{value:"Stream",id:"stream",level:2},{value:"Stream Example",id:"stream-example",level:3},{value:"Saving Multiple Presentations",id:"saving-multiple-presentations",level:2},{value:"Client Browser",id:"client-browser",level:3},{value:"Node.js",id:"nodejs",level:3}],d={toc:s};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Several methods are available when generating a presentation."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"All methods return a Promise"),(0,r.kt)("li",{parentName:"ul"},"Working examples are available under ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/gitbrent/PptxGenJS/tree/master/demos"},"/demos"))),(0,r.kt)("h2",{id:"write-file"},"Write File"),(0,r.kt)("p",null,"Export the presentation as a regular flat file. Browser-based apps will prompt the user to download the file and push a\nPowerPoint Presentation MIME-type pptx file. Node.js apps will use ",(0,r.kt)("inlineCode",{parentName:"p"},"fs")," to save the file to the local file system."),(0,r.kt)("h3",{id:"write-file-props-writefileprops"},"Write File Props (",(0,r.kt)("inlineCode",{parentName:"h3"},"WriteFileProps"),")"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Option"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Default"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"compression")),(0,r.kt)("td",{parentName:"tr",align:"left"},"boolean"),(0,r.kt)("td",{parentName:"tr",align:"left"},"false"),(0,r.kt)("td",{parentName:"tr",align:"left"},"apply zip compression (exports take longer but saves signifcant space)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fileName")),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"'Presentation.pptx'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"output filename")))),(0,r.kt)("h3",{id:"write-file-example"},"Write File Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// For simple cases, you can omit `then`\npptx.writeFile({ fileName: 'Browser-PowerPoint-Demo.pptx' });\n\n// Using Promise to determine when the file has actually completed generating\npptx.writeFile({ fileName: 'Browser-PowerPoint-Demo.pptx' });\n    .then(fileName => {\n        console.log(`created file: ${fileName}`);\n    });\n")),(0,r.kt)("h2",{id:"write"},"Write"),(0,r.kt)("p",null,"Export the presentation into other data formats for cloud storage."),(0,r.kt)("h3",{id:"write-props-writeprops"},"Write Props (",(0,r.kt)("inlineCode",{parentName:"h3"},"WriteProps"),")"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Option"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Default"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"compression")),(0,r.kt)("td",{parentName:"tr",align:"left"},"boolean"),(0,r.kt)("td",{parentName:"tr",align:"left"},"false"),(0,r.kt)("td",{parentName:"tr",align:"left"},"apply zip compression (exports take longer but saves signifcant space)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"outputType")),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"blob"),(0,r.kt)("td",{parentName:"tr",align:"left"},"'arraybuffer', 'base64', 'binarystring', 'blob', 'nodebuffer', 'uint8array'")))),(0,r.kt)("h3",{id:"write-example"},"Write Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'pptx.write("base64")\n    .then((data) => {\n        console.log("write as base64: Here are 0-100 chars of `data`:\\n");\n        console.log(data.substring(0, 100));\n    })\n    .catch((err) => {\n        console.error(err);\n    });\n')),(0,r.kt)("h2",{id:"stream"},"Stream"),(0,r.kt)("p",null,"Export the presentation into a binary stream format for cloud storage, etc."),(0,r.kt)("h3",{id:"stream-example"},"Stream Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'// Ex using: `const app = express();``\npptx.stream()\n    .then((data) => {\n        app.get("/", (req, res) => {\n            res.writeHead(200, { "Content-disposition": "attachment;filename=" + fileName, "Content-Length": data.length });\n            res.end(new Buffer(data, "binary"));\n        });\n\n        app.listen(3000, () => {\n            console.log("PptxGenJS Node Stream Demo app listening on port 3000!");\n            console.log("Visit: http://localhost:3000/");\n            console.log("(press Ctrl-C to quit demo)");\n        });\n    })\n    .catch((err) => {\n        console.log("ERROR: " + err);\n    });\n')),(0,r.kt)("h2",{id:"saving-multiple-presentations"},"Saving Multiple Presentations"),(0,r.kt)("h3",{id:"client-browser"},"Client Browser"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"In order to generate a new, unique Presentation just create a new instance of the library then add objects and save as normal.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'let pptx = null;\n\n// Presentation 1:\npptx = new PptxGenJS();\npptx.addSlide().addText("Presentation 1", { x: 1, y: 1 });\npptx.writeFile({ fileName: "PptxGenJS-Presentation-1" });\n\n// Presentation 2:\npptx = new PptxGenJS();\npptx.addSlide().addText("Presentation 2", { x: 1, y: 1 });\npptx.writeFile({ fileName: "PptxGenJS-Presentation-2" });\n')),(0,r.kt)("h3",{id:"nodejs"},"Node.js"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"See ",(0,r.kt)("inlineCode",{parentName:"li"},"demos/node/demo.js")," for a working demo with multiple presentations, promises, etc."),(0,r.kt)("li",{parentName:"ul"},"See ",(0,r.kt)("inlineCode",{parentName:"li"},"demos/node/demo_stream.js")," for a working demo using streaming")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'import pptxgen from "pptxgenjs";\n\n// Presentation 1:\nlet pptx1 = new pptxgen();\npptx1.addSlide().addText("Presentation 1", { x: 1, y: 1 });\npptx1.writeFile({ fileName: "PptxGenJS-NodePres-1" });\n\n// Presentation 2:\nlet pptx2 = new pptxgen();\npptx2.addSlide().addText("Presentation 2", { x: 1, y: 1 });\npptx2.writeFile({ fileName: "PptxGenJS-NodePres-2" });\n')))}m.isMDXComponent=!0}}]);